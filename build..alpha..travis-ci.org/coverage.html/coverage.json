{"/home/travis/build/npmtest/node-npmtest-fly/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-fly/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_fly */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-fly/lib.npmtest_fly.js":{"path":"/home/travis/build/npmtest/node-npmtest-fly/lib.npmtest_fly.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":48}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":54}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_fly */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_fly = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_fly = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-fly/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-fly/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":47}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":61},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-fly && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_fly */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_fly","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_fly.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_fly.rollup.js'] =","            local.assetsDict['/assets.npmtest_fly.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_fly.__dirname + '/lib.npmtest_fly.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/fly.js":{"path":"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/fly.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":19}}},"2":{"name":"(anonymous_2)","line":66,"loc":{"start":{"line":66,"column":7},"end":{"line":66,"column":26}}},"3":{"name":"(anonymous_3)","line":84,"loc":{"start":{"line":84,"column":7},"end":{"line":84,"column":20}}},"4":{"name":"(anonymous_4)","line":117,"loc":{"start":{"line":117,"column":10},"end":{"line":117,"column":24}}},"5":{"name":"(anonymous_5)","line":125,"loc":{"start":{"line":125,"column":8},"end":{"line":125,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":33}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":30}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":25}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":28}},"9":{"start":{"line":15,"column":2},"end":{"line":15,"column":9}},"10":{"start":{"line":17,"column":2},"end":{"line":17,"column":19}},"11":{"start":{"line":19,"column":2},"end":{"line":19,"column":24}},"12":{"start":{"line":20,"column":2},"end":{"line":20,"column":36}},"13":{"start":{"line":21,"column":2},"end":{"line":21,"column":57}},"14":{"start":{"line":24,"column":2},"end":{"line":27,"column":3}},"15":{"start":{"line":25,"column":3},"end":{"line":25,"column":34}},"16":{"start":{"line":26,"column":3},"end":{"line":26,"column":9}},"17":{"start":{"line":29,"column":2},"end":{"line":29,"column":18}},"18":{"start":{"line":30,"column":2},"end":{"line":30,"column":34}},"19":{"start":{"line":33,"column":2},"end":{"line":33,"column":17}},"20":{"start":{"line":34,"column":2},"end":{"line":34,"column":19}},"21":{"start":{"line":35,"column":2},"end":{"line":35,"column":21}},"22":{"start":{"line":37,"column":2},"end":{"line":37,"column":40}},"23":{"start":{"line":38,"column":2},"end":{"line":38,"column":42}},"24":{"start":{"line":39,"column":2},"end":{"line":39,"column":46}},"25":{"start":{"line":42,"column":2},"end":{"line":44,"column":3}},"26":{"start":{"line":43,"column":3},"end":{"line":43,"column":9}},"27":{"start":{"line":46,"column":2},"end":{"line":52,"column":3}},"28":{"start":{"line":47,"column":3},"end":{"line":47,"column":33}},"29":{"start":{"line":47,"column":25},"end":{"line":47,"column":33}},"30":{"start":{"line":48,"column":3},"end":{"line":51,"column":4}},"31":{"start":{"line":54,"column":2},"end":{"line":54,"column":15}},"32":{"start":{"line":55,"column":2},"end":{"line":63,"column":3}},"33":{"start":{"line":56,"column":3},"end":{"line":56,"column":28}},"34":{"start":{"line":56,"column":20},"end":{"line":56,"column":28}},"35":{"start":{"line":57,"column":3},"end":{"line":57,"column":18}},"36":{"start":{"line":58,"column":3},"end":{"line":62,"column":4}},"37":{"start":{"line":59,"column":4},"end":{"line":59,"column":19}},"38":{"start":{"line":60,"column":10},"end":{"line":62,"column":4}},"39":{"start":{"line":61,"column":4},"end":{"line":61,"column":29}},"40":{"start":{"line":68,"column":2},"end":{"line":71,"column":3}},"41":{"start":{"line":69,"column":3},"end":{"line":69,"column":14}},"42":{"start":{"line":70,"column":3},"end":{"line":70,"column":19}},"43":{"start":{"line":73,"column":2},"end":{"line":73,"column":45}},"44":{"start":{"line":75,"column":2},"end":{"line":77,"column":3}},"45":{"start":{"line":76,"column":3},"end":{"line":76,"column":40}},"46":{"start":{"line":79,"column":2},"end":{"line":79,"column":26}},"47":{"start":{"line":81,"column":2},"end":{"line":81,"column":39}},"48":{"start":{"line":85,"column":2},"end":{"line":85,"column":26}},"49":{"start":{"line":86,"column":2},"end":{"line":86,"column":52}},"50":{"start":{"line":88,"column":2},"end":{"line":88,"column":31}},"51":{"start":{"line":90,"column":2},"end":{"line":92,"column":3}},"52":{"start":{"line":91,"column":3},"end":{"line":91,"column":43}},"53":{"start":{"line":95,"column":2},"end":{"line":95,"column":35}},"54":{"start":{"line":97,"column":2},"end":{"line":97,"column":48}},"55":{"start":{"line":99,"column":2},"end":{"line":114,"column":3}},"56":{"start":{"line":101,"column":3},"end":{"line":101,"column":33}},"57":{"start":{"line":103,"column":3},"end":{"line":103,"column":32}},"58":{"start":{"line":105,"column":3},"end":{"line":105,"column":68}},"59":{"start":{"line":107,"column":3},"end":{"line":107,"column":36}},"60":{"start":{"line":108,"column":3},"end":{"line":108,"column":40}},"61":{"start":{"line":110,"column":3},"end":{"line":110,"column":13}},"62":{"start":{"line":112,"column":3},"end":{"line":112,"column":45}},"63":{"start":{"line":113,"column":3},"end":{"line":113,"column":12}},"64":{"start":{"line":118,"column":2},"end":{"line":122,"column":3}},"65":{"start":{"line":119,"column":3},"end":{"line":119,"column":57}},"66":{"start":{"line":119,"column":36},"end":{"line":119,"column":55}},"67":{"start":{"line":126,"column":2},"end":{"line":126,"column":19}},"68":{"start":{"line":127,"column":2},"end":{"line":134,"column":3}},"69":{"start":{"line":128,"column":3},"end":{"line":131,"column":23}},"70":{"start":{"line":129,"column":4},"end":{"line":129,"column":39}},"71":{"start":{"line":130,"column":4},"end":{"line":130,"column":32}},"72":{"start":{"line":133,"column":3},"end":{"line":133,"column":28}},"73":{"start":{"line":138,"column":0},"end":{"line":138,"column":20}}},"branchMap":{"1":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":9},"end":{"line":17,"column":13}},{"start":{"line":17,"column":17},"end":{"line":17,"column":19}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":18},"end":{"line":20,"column":30}},{"start":{"line":20,"column":34},"end":{"line":20,"column":36}}]},"3":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":16},"end":{"line":21,"column":26}},{"start":{"line":21,"column":30},"end":{"line":21,"column":34}},{"start":{"line":21,"column":38},"end":{"line":21,"column":51}},{"start":{"line":21,"column":55},"end":{"line":21,"column":57}}]},"4":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"5":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":18},"end":{"line":30,"column":26}},{"start":{"line":30,"column":30},"end":{"line":30,"column":33}}]},"6":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"7":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":6},"end":{"line":42,"column":11}},{"start":{"line":42,"column":15},"end":{"line":42,"column":34}}]},"8":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":3},"end":{"line":47,"column":3}},{"start":{"line":47,"column":3},"end":{"line":47,"column":3}}]},"9":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":3},"end":{"line":56,"column":3}},{"start":{"line":56,"column":3},"end":{"line":56,"column":3}}]},"10":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":3},"end":{"line":58,"column":3}},{"start":{"line":58,"column":3},"end":{"line":58,"column":3}}]},"11":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":10},"end":{"line":60,"column":10}},{"start":{"line":60,"column":10},"end":{"line":60,"column":10}}]},"12":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":2},"end":{"line":68,"column":2}},{"start":{"line":68,"column":2},"end":{"line":68,"column":2}}]},"13":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":2},"end":{"line":75,"column":2}},{"start":{"line":75,"column":2},"end":{"line":75,"column":2}}]},"14":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":9},"end":{"line":85,"column":13}},{"start":{"line":85,"column":17},"end":{"line":85,"column":26}}]},"15":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":90,"column":2}},{"start":{"line":90,"column":2},"end":{"line":90,"column":2}}]},"16":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":14},"end":{"line":95,"column":29}},{"start":{"line":95,"column":33},"end":{"line":95,"column":35}}]},"17":{"line":126,"type":"binary-expr","locations":[{"start":{"line":126,"column":9},"end":{"line":126,"column":13}},{"start":{"line":126,"column":17},"end":{"line":126,"column":19}}]},"18":{"line":129,"type":"binary-expr","locations":[{"start":{"line":129,"column":4},"end":{"line":129,"column":7}},{"start":{"line":129,"column":11},"end":{"line":129,"column":39}}]},"19":{"line":131,"type":"binary-expr","locations":[{"start":{"line":131,"column":6},"end":{"line":131,"column":14}},{"start":{"line":131,"column":18},"end":{"line":131,"column":22}}]}},"code":["\"use strict\"","","const res = require(\"path\").resolve","const Promise = require(\"bluebird\")","const Emitter = require(\"events\")","const wrapp = require(\"./wrapp\")","const util = require(\"./utils\")","const Task = require(\"./task\")","const $ = require(\"./fn\")","","const co = Promise.coroutine","","class Fly extends Emitter {","\tconstructor(opts) {","\t\tsuper()","","\t\topts = opts || {}","","\t\tconst file = opts.file","\t\tconst plugins = opts.plugins || []","\t\tconst tasks = opts.tasks || file && require(file) || {}","","\t\t// if custom `tasks`, must be object","\t\tif (!$.isObject(tasks)) {","\t\t\tthis.emit(\"tasks_force_object\")","\t\t\treturn","\t\t}","","\t\tthis.file = file","\t\tthis.root = res(opts.cwd || \".\")","","\t\t// construct V8 shapes","\t\tthis.tasks = {}","\t\tthis.plugins = {}","\t\tthis.plugNames = []","","\t\tthis.start = co(this.start).bind(this)","\t\tthis.serial = co(this.serial).bind(this)","\t\tthis.parallel = co(this.parallel).bind(this)","","\t\t// nothing to do, stop","\t\tif (!file && $.isEmptyObj(tasks)) {","\t\t\treturn","\t\t}","","\t\tfor (const k in tasks) {","\t\t\tif (!(tasks[k].call)) continue","\t\t\tthis.tasks[k] = {","\t\t\t\tdata: {files: [], globs: [], prevs: []},","\t\t\t\tfunc: co(tasks[k])","\t\t\t}","\t\t}","","\t\tlet fn, i = 0","\t\tfor (; i < plugins.length; i++) {","\t\t\tif (!plugins[i]) continue","\t\t\tfn = plugins[i]","\t\t\tif ($.isObject(fn)) {","\t\t\t\tthis.plugin(fn)","\t\t\t} else if (fn.call) {","\t\t\t\tfn.call(this, this, util)","\t\t\t}","\t\t}","\t}","","\tplugin(name, opts, func) {","\t\t// accept an object with all val","\t\tif ($.isObject(name)) {","\t\t\topts = name","\t\t\tname = opts.name","\t\t}","\t\t// check if plugin name exists","\t\tconst nxt = $.valUniq(name, this.plugNames)","\t\t// if it did, emit event warning","\t\tif (nxt !== name) {","\t\t\tthis.emit(\"plugin_rename\", name, nxt)","\t\t}","\t\t// save / reserve plugin name","\t\tthis.plugNames.push(nxt)","\t\t// safely attach to `plugins` object","\t\tthis.plugins[nxt] = wrapp(opts, func)","\t}","","\t*start(name, opts) {","\t\tname = name || \"default\"","\t\topts = Object.assign({src: null, val: null}, opts)","","\t\tconst task = this.tasks[name]","","\t\tif (!task) {","\t\t\treturn this.emit(\"task_not_found\", name)","\t\t}","","\t\t// restore previous data, if any","\t\tconst old = task.data.prevs || []","\t\t// new task ~> reset `data`","\t\ttask.data = {files: [], globs: [], prevs: old}","","\t\ttry {","\t\t\t// get start time","\t\t\tconst start = process.hrtime()","\t\t\t// announce start","\t\t\tthis.emit(\"task_start\", name)","\t\t\t// attempt to execute","\t\t\tconst val = yield new Task(this).exec(task.func, opts, task.data)","\t\t\t// announce completion","\t\t\tconst end = process.hrtime(start)","\t\t\tthis.emit(\"task_complete\", name, end)","\t\t\t// send back","\t\t\treturn val","\t\t} catch (err) {","\t\t\tthis.emit(\"task_error\", name, err.message)","\t\t\tthrow err","\t\t}","\t}","","\t*parallel(tasks, opts) {","\t\ttry {","\t\t\tyield Promise.all(tasks.map(t => this.start(t, opts)))","\t\t} catch (err) {","\t\t\t//","\t\t}","\t}","","\t*serial(tasks, opts) {","\t\topts = opts || {}","\t\ttry {","\t\t\treturn yield Promise.reduce(tasks, (val, str) => {","\t\t\t\tval && Object.assign(opts, { val })","\t\t\t\treturn this.start(str, opts)","\t\t\t}, opts.val || null)","\t\t} catch (err) {","\t\t\tthis.emit(\"serial_error\")","\t\t}","\t}","}","","module.exports = Fly",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"11":1,"15":0,"17":0,"19":0,"20":0,"21":0,"24":0,"25":0,"26":0,"29":0,"30":0,"33":0,"34":0,"35":0,"37":0,"38":0,"39":0,"42":0,"43":0,"46":0,"47":0,"48":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"68":0,"69":0,"70":0,"73":0,"75":0,"76":0,"79":0,"81":0,"85":0,"86":0,"88":0,"90":0,"91":0,"95":0,"97":0,"99":0,"101":0,"103":0,"105":0,"107":0,"108":0,"110":0,"112":0,"113":0,"118":0,"119":0,"126":0,"127":0,"128":0,"129":0,"130":0,"133":0,"138":1}},"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/wrapp.js":{"path":"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/wrapp.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":17},"end":{"line":6,"column":39}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":11},"end":{"line":11,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":28}},"3":{"start":{"line":6,"column":0},"end":{"line":24,"column":1}},"4":{"start":{"line":8,"column":1},"end":{"line":8,"column":49}},"5":{"start":{"line":9,"column":1},"end":{"line":9,"column":25}},"6":{"start":{"line":11,"column":1},"end":{"line":23,"column":3}},"7":{"start":{"line":12,"column":2},"end":{"line":12,"column":13}},"8":{"start":{"line":13,"column":2},"end":{"line":13,"column":17}},"9":{"start":{"line":14,"column":2},"end":{"line":14,"column":50}},"10":{"start":{"line":16,"column":2},"end":{"line":16,"column":52}},"11":{"start":{"line":18,"column":2},"end":{"line":18,"column":60}},"12":{"start":{"line":18,"column":19},"end":{"line":18,"column":60}},"13":{"start":{"line":20,"column":2},"end":{"line":20,"column":59}},"14":{"start":{"line":22,"column":2},"end":{"line":22,"column":13}}},"branchMap":{"1":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":8},"end":{"line":9,"column":17}},{"start":{"line":9,"column":21},"end":{"line":9,"column":25}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":6},"end":{"line":12,"column":7}},{"start":{"line":12,"column":11},"end":{"line":12,"column":13}}]},"3":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":2},"end":{"line":14,"column":34}},{"start":{"line":14,"column":38},"end":{"line":14,"column":50}}]},"4":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":34},"end":{"line":16,"column":41}},{"start":{"line":16,"column":44},"end":{"line":16,"column":51}}]},"5":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":22},"end":{"line":20,"column":47}},{"start":{"line":20,"column":50},"end":{"line":20,"column":58}}]}},"code":["\"use strict\"","","const Promise = require(\"bluebird\")","const co = Promise.coroutine","","module.exports = function (opts, func) {","\t// assign against defaults","\topts = Object.assign({every: 1, files: 1}, opts)","\tfunc = opts.func || func","","\treturn co(function * (o) {","\t\to = o || {}","\t\tconst args = []","\t\targs.push.apply(args, arguments) && args.shift()","\t\t// grab alias to chosen source type","\t\tconst arr = this._[opts.files ? \"files\" : \"globs\"]","\t\t// wrapper pass all arguments to plugin func","\t\tconst run = s => co(func).apply(this, [s, o].concat(args))","\t\t// loop thru EACH if `every`, else send full source array","\t\tyield (opts.every ? Promise.all(arr.map(run)) : run(arr))","\t\t// send back instance allow chain","\t\treturn this","\t})","}",""],"l":{"3":1,"4":1,"6":1,"8":0,"9":0,"11":0,"12":0,"13":0,"14":0,"16":0,"18":0,"20":0,"22":0}},"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/utils/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/utils/index.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":36}},"3":{"start":{"line":6,"column":0},"end":{"line":14,"column":2}}},"branchMap":{},"code":["\"use strict\"","","const Promise = require(\"bluebird\")","const logging = require(\"./logging\")","","module.exports = Object.assign(logging, {","\tcoroutine: Promise.coroutine,","\texpand: require(\"./expand\"),","\tfind: require(\"./find\"),","\tpromisify: Promise.promisify,","\tread: require(\"./read\"),","\ttrace: require(\"./trace\"),","\twrite: require(\"./write\")","})",""],"l":{"3":1,"4":1,"6":1}},"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/utils/logging.js":{"path":"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/utils/logging.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":1,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"stamp","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":17}}},"2":{"name":"log","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":15}}},"3":{"name":"error","line":49,"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":17}}},"4":{"name":"alert","line":54,"loc":{"start":{"line":54,"column":0},"end":{"line":54,"column":17}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":28}},"2":{"start":{"line":10,"column":0},"end":{"line":10,"column":37}},"3":{"start":{"line":11,"column":0},"end":{"line":11,"column":40}},"4":{"start":{"line":21,"column":0},"end":{"line":38,"column":1}},"5":{"start":{"line":22,"column":1},"end":{"line":22,"column":10}},"6":{"start":{"line":23,"column":1},"end":{"line":23,"column":41}},"7":{"start":{"line":25,"column":1},"end":{"line":27,"column":2}},"8":{"start":{"line":26,"column":2},"end":{"line":26,"column":24}},"9":{"start":{"line":34,"column":1},"end":{"line":34,"column":58}},"10":{"start":{"line":37,"column":1},"end":{"line":37,"column":87}},"11":{"start":{"line":44,"column":0},"end":{"line":47,"column":1}},"12":{"start":{"line":45,"column":1},"end":{"line":45,"column":58}},"13":{"start":{"line":46,"column":1},"end":{"line":46,"column":12}},"14":{"start":{"line":49,"column":0},"end":{"line":52,"column":1}},"15":{"start":{"line":50,"column":1},"end":{"line":50,"column":56}},"16":{"start":{"line":51,"column":1},"end":{"line":51,"column":12}},"17":{"start":{"line":54,"column":0},"end":{"line":63,"column":1}},"18":{"start":{"line":55,"column":1},"end":{"line":61,"column":2}},"19":{"start":{"line":56,"column":2},"end":{"line":60,"column":15}},"20":{"start":{"line":62,"column":1},"end":{"line":62,"column":12}},"21":{"start":{"line":65,"column":0},"end":{"line":65,"column":36}}},"branchMap":{"1":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":52},"end":{"line":37,"column":78}},{"start":{"line":37,"column":81},"end":{"line":37,"column":85}}]},"2":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":1},"end":{"line":55,"column":1}},{"start":{"line":55,"column":1},"end":{"line":55,"column":1}}]}},"code":["\"use strict\"","","/**"," * @todo"," * \t\t- use \"fmt\" object definitions"," * \t\t- use es2015"," */","","const clor = require(\"clor\")","const homedir = require(\"os\").homedir","const getTime = require(\"../fn\").getTime","","/**"," * Apply args to the `console[method]` & Add a date stamp."," * Bind `this` to an object with the following options:"," *"," * @param  {String} args.date     The color string to use for the date"," * @param  {String} args.method   The `console` method to use"," * @param  {String} args.custom   The custom styling to append to args"," */","function stamp() {","\tlet i = 0","\tconst args = new Array(arguments.length)","\t// i is always valid index","\tfor (; i < args.length; ++i) {","\t\targs[i] = arguments[i]","\t}","","\t// if (process.env.DEBUG) {","\t// \treturn _.apply(_, args)","\t// }","","\t// print the curr time.","\tprocess.stdout.write(`[${clor[this.color](getTime())}] `)","","\t// apply arguments to `console` method","\tconsole[this.method].apply(console, (this.custom ? [this.custom].concat(args) : args))","}","","/**"," * Logging Utilities"," */","","function log() {","\tstamp.apply({method: \"log\", color: \"magenta\"}, arguments)","\treturn this","}","","function error() {","\tstamp.apply({method: \"error\", color: \"red\"}, arguments)","\treturn this","}","","function alert() {","\tif (process.env.VERBOSE) {","\t\tstamp.apply({","\t\t\tcustom: clor.yellow.bold(\"%s\"),","\t\t\tcolor: \"yellow\",","\t\t\tmethod: \"log\"","\t\t}, arguments)","\t}","\treturn this","}","","module.exports = {alert, error, log}",""],"l":{"9":1,"10":1,"11":1,"21":1,"22":0,"23":0,"25":0,"26":0,"34":0,"37":0,"44":1,"45":0,"46":0,"49":1,"50":0,"51":0,"54":1,"55":0,"56":0,"62":0,"65":1}},"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/fn.js":{"path":"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/fn.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":1,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"flat","line":70,"loc":{"start":{"line":70,"column":0},"end":{"line":70,"column":24}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":17}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":64}},"3":{"start":{"line":7,"column":20},"end":{"line":7,"column":64}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":65}},"5":{"start":{"line":9,"column":22},"end":{"line":9,"column":65}},"6":{"start":{"line":11,"column":0},"end":{"line":11,"column":94}},"7":{"start":{"line":11,"column":19},"end":{"line":11,"column":94}},"8":{"start":{"line":18,"column":0},"end":{"line":26,"column":1}},"9":{"start":{"line":19,"column":1},"end":{"line":19,"column":16}},"10":{"start":{"line":20,"column":1},"end":{"line":20,"column":39}},"11":{"start":{"line":21,"column":1},"end":{"line":24,"column":2}},"12":{"start":{"line":22,"column":2},"end":{"line":22,"column":12}},"13":{"start":{"line":23,"column":2},"end":{"line":23,"column":40}},"14":{"start":{"line":25,"column":1},"end":{"line":25,"column":23}},"15":{"start":{"line":32,"column":0},"end":{"line":32,"column":67}},"16":{"start":{"line":32,"column":18},"end":{"line":32,"column":67}},"17":{"start":{"line":40,"column":0},"end":{"line":48,"column":1}},"18":{"start":{"line":41,"column":1},"end":{"line":41,"column":10}},"19":{"start":{"line":42,"column":1},"end":{"line":42,"column":12}},"20":{"start":{"line":43,"column":1},"end":{"line":46,"column":2}},"21":{"start":{"line":44,"column":2},"end":{"line":44,"column":5}},"22":{"start":{"line":45,"column":2},"end":{"line":45,"column":19}},"23":{"start":{"line":47,"column":1},"end":{"line":47,"column":9}},"24":{"start":{"line":55,"column":0},"end":{"line":68,"column":1}},"25":{"start":{"line":56,"column":1},"end":{"line":56,"column":23}},"26":{"start":{"line":57,"column":1},"end":{"line":57,"column":15}},"27":{"start":{"line":58,"column":1},"end":{"line":58,"column":10}},"28":{"start":{"line":60,"column":1},"end":{"line":65,"column":2}},"29":{"start":{"line":61,"column":2},"end":{"line":61,"column":21}},"30":{"start":{"line":62,"column":2},"end":{"line":64,"column":3}},"31":{"start":{"line":63,"column":3},"end":{"line":63,"column":17}},"32":{"start":{"line":67,"column":1},"end":{"line":67,"column":11}},"33":{"start":{"line":70,"column":0},"end":{"line":78,"column":1}},"34":{"start":{"line":71,"column":1},"end":{"line":71,"column":23}},"35":{"start":{"line":72,"column":1},"end":{"line":72,"column":10}},"36":{"start":{"line":73,"column":1},"end":{"line":76,"column":2}},"37":{"start":{"line":74,"column":2},"end":{"line":74,"column":20}},"38":{"start":{"line":75,"column":2},"end":{"line":75,"column":53}},"39":{"start":{"line":77,"column":1},"end":{"line":77,"column":11}},"40":{"start":{"line":80,"column":0},"end":{"line":80,"column":32}},"41":{"start":{"line":80,"column":19},"end":{"line":80,"column":32}}},"branchMap":{"1":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":20},"end":{"line":7,"column":32}},{"start":{"line":7,"column":37},"end":{"line":7,"column":63}}]},"2":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":22},"end":{"line":9,"column":37}},{"start":{"line":9,"column":41},"end":{"line":9,"column":65}}]},"3":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":57},"end":{"line":11,"column":59}},{"start":{"line":11,"column":62},"end":{"line":11,"column":94}}]},"4":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":20},"end":{"line":11,"column":32}},{"start":{"line":11,"column":36},"end":{"line":11,"column":53}}]},"5":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":83},"end":{"line":11,"column":86}},{"start":{"line":11,"column":89},"end":{"line":11,"column":94}}]},"6":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},{"start":{"line":21,"column":1},"end":{"line":21,"column":1}}]},"7":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"8":{"line":75,"type":"cond-expr","locations":[{"start":{"line":75,"column":23},"end":{"line":75,"column":37}},{"start":{"line":75,"column":40},"end":{"line":75,"column":53}}]}},"code":["/* eslint no-nested-ternary:0 */","\"use strict\"","","const $ = exports","","// @see http://stackoverflow.com/a/16608074","$.isObject = val => Boolean(val) && (val.constructor === Object)","","$.isEmptyObj = val => $.isObject(val) && !Object.keys(val).length","","$.toArray = val => (val === null || val === undefined) ? [] : Array.isArray(val) ? val : [val]","","/**"," * Format a task's duration."," * @param  {Array} arr  Output from `process.hrtime`"," * @return {String}"," */","$.formatTime = arr => {","\tlet unit = \"ms\"","\tlet num = Math.round(arr[1] / 1000000)","\tif (arr[0] > 0) {","\t\tunit = \"s\"","\t\tnum = (arr[0] + num / 1000).toFixed(2)","\t}","\treturn `${num}${unit}`","}","","/**"," * Get the current time!"," * @return {String}  Formatted as `HH:MM:ss`."," */","$.getTime = () => new Date().toTimeString(\"UTC\").match(/[^\\s]+/)[0]","","/**"," * Check if value is unique within the group. Modify if is not."," * @param  {String} val  The value to check."," * @param  {Array}  arr  The array of values to check against."," * @return {String}      The unique value possibly incremented."," */","$.valUniq = (val, arr) => {","\tlet n = 0","\tlet v = val","\twhile (arr.indexOf(v) !== -1) {","\t\tn++","\t\tv = val.concat(n)","\t}","\treturn v","}","","/**"," * Get a unique Set of Array values"," * @param  {Array} arr  The values to check"," * @return {Set}        The unique values"," */","$.getUniques = arr => {","\tconst len = arr.length","\tconst res = []","\tlet i = 0","","\tfor (; i < len; i++) {","\t\tconst curr = arr[i]","\t\tif (res.indexOf(curr) === -1) {","\t\t\tres.push(curr)","\t\t}","\t}","","\treturn res","}","","function flat(arr, res) {","\tconst len = arr.length","\tlet i = 0","\tfor (; i < len; i++) {","\t\tconst cur = arr[i]","\t\tArray.isArray(cur) ? flat(cur, res) : res.push(cur)","\t}","\treturn res","}","","$.flatten = arr => flat(arr, [])",""],"l":{"4":1,"7":1,"9":1,"11":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"25":0,"32":1,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"47":0,"55":1,"56":0,"57":0,"58":0,"60":0,"61":0,"62":0,"63":0,"67":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":0,"77":0,"80":1}},"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/utils/expand.js":{"path":"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/utils/expand.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":0,"9":1,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"validate","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":23}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":17},"end":{"line":17,"column":43}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":47}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":46}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":40}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":47}},"6":{"start":{"line":8,"column":24},"end":{"line":8,"column":47}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":39}},"8":{"start":{"line":9,"column":25},"end":{"line":9,"column":39}},"9":{"start":{"line":11,"column":0},"end":{"line":15,"column":1}},"10":{"start":{"line":12,"column":1},"end":{"line":14,"column":2}},"11":{"start":{"line":13,"column":2},"end":{"line":13,"column":54}},"12":{"start":{"line":17,"column":0},"end":{"line":49,"column":1}},"13":{"start":{"line":18,"column":1},"end":{"line":18,"column":18}},"14":{"start":{"line":19,"column":1},"end":{"line":19,"column":29}},"15":{"start":{"line":21,"column":1},"end":{"line":25,"column":2}},"16":{"start":{"line":22,"column":2},"end":{"line":22,"column":20}},"17":{"start":{"line":24,"column":2},"end":{"line":24,"column":28}},"18":{"start":{"line":27,"column":1},"end":{"line":27,"column":11}},"19":{"start":{"line":28,"column":1},"end":{"line":28,"column":17}},"20":{"start":{"line":29,"column":1},"end":{"line":29,"column":43}},"21":{"start":{"line":31,"column":1},"end":{"line":44,"column":3}},"22":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"23":{"start":{"line":33,"column":3},"end":{"line":33,"column":9}},"24":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"25":{"start":{"line":37,"column":48},"end":{"line":37,"column":58}},"26":{"start":{"line":40,"column":2},"end":{"line":43,"column":4}},"27":{"start":{"line":46,"column":1},"end":{"line":48,"column":52}},"28":{"start":{"line":47,"column":17},"end":{"line":47,"column":43}},"29":{"start":{"line":48,"column":15},"end":{"line":48,"column":51}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},{"start":{"line":12,"column":1},"end":{"line":12,"column":1}}]},"2":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":8},"end":{"line":18,"column":12}},{"start":{"line":18,"column":16},"end":{"line":18,"column":18}}]},"3":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":17},"end":{"line":29,"column":37}},{"start":{"line":29,"column":41},"end":{"line":29,"column":43}}]},"4":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]}},"code":["\"use strict\"","","const Promise = require(\"bluebird\")","const glob = Promise.promisify(require(\"glob\"))","const getUniques = require(\"../fn\").getUniques","const toArray = require(\"../fn\").toArray","","const isString = val => typeof val === \"string\"","const hasIgnore = val => val[0] === \"!\"","","function validate(arr) {","\tif (!arr.every(isString)) {","\t\tthrow new TypeError(\"All patterns must be strings!\")","\t}","}","","module.exports = function (patterns, opts) {","\topts = opts || {}","\tpatterns = toArray(patterns)","","\ttry {","\t\tvalidate(patterns)","\t} catch (err) {","\t\treturn Promise.reject(err)","\t}","","\tlet ignore","\tconst globs = []","\tconst ignores = toArray(opts.ignore) || []","","\tpatterns.forEach((pat, i) => {","\t\tif (hasIgnore(pat)) {","\t\t\treturn","\t\t}","","\t\tignore = ignores.concat(","\t\t\tpatterns.slice(i).filter(hasIgnore).map(p => p.slice(1))","\t\t)","","\t\tglobs.push({","\t\t\tpattern: pat,","\t\t\toptions: Object.assign({}, opts, {ignore})","\t\t})","\t})","","\treturn Promise.all(","\t\tglobs.map(g => glob(g.pattern, g.options))","\t).then(all => getUniques([].concat.apply([], all)))","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"9":1,"11":1,"12":0,"13":0,"17":1,"18":0,"19":0,"21":0,"22":0,"24":0,"27":0,"28":0,"29":0,"31":0,"32":0,"33":0,"36":0,"37":0,"40":0,"46":0,"47":0,"48":0}},"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/utils/find.js":{"path":"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/utils/find.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":17},"end":{"line":15,"column":38}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":47}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":39}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":25}},"6":{"start":{"line":15,"column":0},"end":{"line":17,"column":1}},"7":{"start":{"line":16,"column":1},"end":{"line":16,"column":90}},"8":{"start":{"line":16,"column":52},"end":{"line":16,"column":89}}},"branchMap":{"1":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":21},"end":{"line":16,"column":24}},{"start":{"line":16,"column":28},"end":{"line":16,"column":31}}]},"2":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":65},"end":{"line":16,"column":82}},{"start":{"line":16,"column":85},"end":{"line":16,"column":89}}]}},"code":["\"use strict\"","","const p = require(\"path\")","const promisify = require(\"bluebird\").promisify","const glob = promisify(require(\"glob\"))","const normalize = p.normalize","const resolve = p.resolve","","/**"," * Find a file from a given path"," * @param {String} file  The filename to find."," * @param {String} dir   The directory to begin searching within."," * @yield {String}       The file\"s full path or `null`."," */","module.exports = function (file, dir) {","\treturn glob(resolve(dir || \".\", file)).then(arr => arr.length ? normalize(arr[0]) : null)","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"15":1,"16":0}},"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/utils/read.js":{"path":"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/utils/read.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":20},"end":{"line":15,"column":44}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":39}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":43}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":28}},"6":{"start":{"line":15,"column":0},"end":{"line":18,"column":2}},"7":{"start":{"line":16,"column":1},"end":{"line":16,"column":27}},"8":{"start":{"line":17,"column":1},"end":{"line":17,"column":50}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":21},"end":{"line":17,"column":43}},{"start":{"line":17,"column":46},"end":{"line":17,"column":50}}]}},"code":["\"use strict\"","","const fs = require(\"fs\")","const Promise = require(\"bluebird\")","const stat = Promise.promisify(fs.stat)","const read = Promise.promisify(fs.readFile)","const co = Promise.coroutine","","/**"," * Return a file's contents. Will not read directory!"," * @param {String}        file  The file's path."," * @param {Object|String} opts  See `fs.readFile`."," * @yield {Buffer|String}"," */","module.exports = co(function * (file, opts) {","\tconst s = yield stat(file)","\treturn s.isFile() ? yield read(file, opts) : null","})",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"15":1,"16":0,"17":0}},"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/utils/trace.js":{"path":"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/utils/trace.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":17},"end":{"line":6,"column":34}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":45}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":78}},"3":{"start":{"line":6,"column":0},"end":{"line":20,"column":1}},"4":{"start":{"line":7,"column":1},"end":{"line":19,"column":13}},"5":{"start":{"line":10,"column":3},"end":{"line":10,"column":43}},"6":{"start":{"line":12,"column":3},"end":{"line":14,"column":4}},"7":{"start":{"line":13,"column":4},"end":{"line":13,"column":16}},"8":{"start":{"line":16,"column":3},"end":{"line":16,"column":38}},"9":{"start":{"line":18,"column":15},"end":{"line":18,"column":30}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":3},"end":{"line":12,"column":3}},{"start":{"line":12,"column":3},"end":{"line":12,"column":3}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":7},"end":{"line":12,"column":27}},{"start":{"line":12,"column":31},"end":{"line":12,"column":46}}]}},"code":["\"use strict\"","","const extractPath = /\\s+at.*(?:\\(|\\s)(.*)\\)?/","const isPath = /^(?:(?:(?:node|(?:internal\\/[\\w/]*)?\\w+)\\.js:\\d+:\\d+)|native)/","","module.exports = function (stack) {","\treturn stack.replace(/\\\\/g, \"/\")","\t\t.split(\"\\n\")","\t\t.filter(x => {","\t\t\tconst pathMatches = x.match(extractPath)","","\t\t\tif (pathMatches === null || !pathMatches[1]) {","\t\t\t\treturn true;","\t\t\t}","","\t\t\treturn !isPath.test(pathMatches[1])","\t\t})","\t\t.filter(x => x.trim() !== \"\")","\t\t.join(\"\\n\")","}",""],"l":{"3":1,"4":1,"6":1,"7":0,"10":0,"12":0,"13":0,"16":0,"18":0}},"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/utils/write.js":{"path":"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/utils/write.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":35},"end":{"line":17,"column":65}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":56}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":51}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":29}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":25}},"7":{"start":{"line":17,"column":0},"end":{"line":23,"column":2}},"8":{"start":{"line":18,"column":1},"end":{"line":22,"column":15}},"9":{"start":{"line":19,"column":2},"end":{"line":19,"column":24}},"10":{"start":{"line":20,"column":2},"end":{"line":20,"column":29}},"11":{"start":{"line":21,"column":2},"end":{"line":21,"column":31}}},"branchMap":{},"code":["\"use strict\"","","const p = require(\"path\")","const Promise = require(\"bluebird\")","const write = Promise.promisify(require(\"fs\").writeFile)","const mkdirp = Promise.promisify(require(\"mkdirp\"))","const normalize = p.normalize","const dirname = p.dirname","","/**"," * Write to a file with given data."," * Creates ancestor directories if needed."," * @param {String} file  The full file\"s path."," * @param {String} data  The data to write."," * @param {Object} opts  See `fs.writeFile`."," */","module.exports = Promise.coroutine(function * (file, data, opts) {","\ttry {","\t\tfile = normalize(file)","\t\tyield mkdirp(dirname(file))","\t\tyield write(file, data, opts)","\t} catch (_) {}","})",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"17":1,"18":0,"19":0,"20":0,"21":0}},"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/task.js":{"path":"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/task.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":1,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"Task","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":19}}},"2":{"name":"(anonymous_2)","line":35,"loc":{"start":{"line":35,"column":22},"end":{"line":35,"column":47}}},"3":{"name":"(anonymous_3)","line":41,"loc":{"start":{"line":41,"column":24},"end":{"line":41,"column":48}}},"4":{"name":"(anonymous_4)","line":45,"loc":{"start":{"line":45,"column":27},"end":{"line":45,"column":52}}},"5":{"name":"(anonymous_5)","line":69,"loc":{"start":{"line":69,"column":27},"end":{"line":69,"column":51}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":32}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":30}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":25}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":22}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":28}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":29}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":23}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":21}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":17}},"13":{"start":{"line":17,"column":0},"end":{"line":33,"column":1}},"14":{"start":{"line":19,"column":1},"end":{"line":19,"column":14}},"15":{"start":{"line":20,"column":1},"end":{"line":20,"column":21}},"16":{"start":{"line":21,"column":1},"end":{"line":21,"column":43}},"17":{"start":{"line":23,"column":1},"end":{"line":23,"column":39}},"18":{"start":{"line":24,"column":1},"end":{"line":24,"column":35}},"19":{"start":{"line":25,"column":1},"end":{"line":25,"column":33}},"20":{"start":{"line":26,"column":1},"end":{"line":26,"column":31}},"21":{"start":{"line":28,"column":1},"end":{"line":30,"column":2}},"22":{"start":{"line":29,"column":2},"end":{"line":29,"column":37}},"23":{"start":{"line":32,"column":1},"end":{"line":32,"column":18}},"24":{"start":{"line":35,"column":0},"end":{"line":39,"column":1}},"25":{"start":{"line":37,"column":1},"end":{"line":37,"column":14}},"26":{"start":{"line":38,"column":1},"end":{"line":38,"column":33}},"27":{"start":{"line":41,"column":0},"end":{"line":43,"column":2}},"28":{"start":{"line":42,"column":1},"end":{"line":42,"column":42}},"29":{"start":{"line":45,"column":0},"end":{"line":67,"column":2}},"30":{"start":{"line":46,"column":1},"end":{"line":46,"column":36}},"31":{"start":{"line":47,"column":1},"end":{"line":47,"column":47}},"32":{"start":{"line":49,"column":1},"end":{"line":51,"column":2}},"33":{"start":{"line":50,"column":2},"end":{"line":50,"column":42}},"34":{"start":{"line":54,"column":1},"end":{"line":54,"column":64}},"35":{"start":{"line":54,"column":48},"end":{"line":54,"column":62}},"36":{"start":{"line":57,"column":1},"end":{"line":57,"column":21}},"37":{"start":{"line":59,"column":1},"end":{"line":66,"column":3}},"38":{"start":{"line":60,"column":2},"end":{"line":60,"column":23}},"39":{"start":{"line":61,"column":2},"end":{"line":65,"column":3}},"40":{"start":{"line":69,"column":0},"end":{"line":108,"column":2}},"41":{"start":{"line":70,"column":1},"end":{"line":70,"column":34}},"42":{"start":{"line":71,"column":1},"end":{"line":71,"column":18}},"43":{"start":{"line":73,"column":1},"end":{"line":73,"column":27}},"44":{"start":{"line":76,"column":1},"end":{"line":76,"column":86}},"45":{"start":{"line":78,"column":1},"end":{"line":89,"column":39}},"46":{"start":{"line":79,"column":2},"end":{"line":79,"column":24}},"47":{"start":{"line":80,"column":2},"end":{"line":80,"column":53}},"48":{"start":{"line":80,"column":35},"end":{"line":80,"column":52}},"49":{"start":{"line":82,"column":2},"end":{"line":86,"column":3}},"50":{"start":{"line":83,"column":3},"end":{"line":83,"column":12}},"51":{"start":{"line":85,"column":3},"end":{"line":85,"column":26}},"52":{"start":{"line":88,"column":2},"end":{"line":88,"column":33}},"53":{"start":{"line":89,"column":19},"end":{"line":89,"column":38}},"54":{"start":{"line":91,"column":1},"end":{"line":91,"column":29}},"55":{"start":{"line":93,"column":1},"end":{"line":107,"column":2}},"56":{"start":{"line":95,"column":20},"end":{"line":105,"column":5}},"57":{"start":{"line":96,"column":4},"end":{"line":96,"column":13}},"58":{"start":{"line":98,"column":4},"end":{"line":98,"column":46}},"59":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"60":{"start":{"line":101,"column":5},"end":{"line":101,"column":39}},"61":{"start":{"line":104,"column":4},"end":{"line":104,"column":50}},"62":{"start":{"line":110,"column":0},"end":{"line":110,"column":21}}},"branchMap":{"1":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":1},"end":{"line":49,"column":1}},{"start":{"line":49,"column":1},"end":{"line":49,"column":1}}]},"2":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":5},"end":{"line":49,"column":17}},{"start":{"line":49,"column":21},"end":{"line":49,"column":34}}]},"3":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":8},"end":{"line":71,"column":12}},{"start":{"line":71,"column":16},"end":{"line":71,"column":18}}]},"4":{"line":76,"type":"cond-expr","locations":[{"start":{"line":76,"column":59},"end":{"line":76,"column":71}},{"start":{"line":76,"column":74},"end":{"line":76,"column":86}}]},"5":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":16},"end":{"line":76,"column":28}},{"start":{"line":76,"column":32},"end":{"line":76,"column":55}}]},"6":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":2},"end":{"line":82,"column":2}},{"start":{"line":82,"column":2},"end":{"line":82,"column":2}}]}},"code":["\"use strict\"","","const p = require(\"path\")","const Promise = require(\"bluebird\")","const wrapp = require(\"./wrapp\")","const util = require(\"./utils\")","const boot = require(\"./boot\")","const $ = require(\"./fn\")","","const RGX = /[\\\\|\\/]/g","const co = Promise.coroutine","const normalize = p.normalize","const format = p.format","const parse = p.parse","const sep = p.sep","","function Task(fly) {","\t// construct shape","\tthis.$ = util","\tthis.root = fly.root","\tthis._ = {files: [], globs: [], prevs: []}","\t// attach parent fns to Task","\tthis.parallel = fly.parallel.bind(fly)","\tthis.serial = fly.serial.bind(fly)","\tthis.start = fly.start.bind(fly)","\tthis.emit = fly.emit.bind(fly)","\t// attach `fly.plugins` to prototype","\tfor (const k in fly.plugins) {","\t\tthis[k] = fly.plugins[k].bind(this)","\t}","\t// return chained methods + shared","\treturn boot(this)","}","","Task.prototype.exec = function(fn, opts, data) {","\t// cache ref to `fly.tasks[].data` values","\tthis._ = data","\treturn fn.call(this, this, opts)","}","","Task.prototype.run = co(function * (opts, func) {","\treturn yield wrapp(opts, func).call(this)","})","","Task.prototype.source = co(function * (globs, opts) {","\tglobs = $.flatten($.toArray(globs))","\tconst files = yield this.$.expand(globs, opts)","","\tif (globs.length && !files.length) {","\t\tthis.emit(\"globs_no_match\", globs, opts)","\t}","","\t// pre-fetch each file\"s content","\tconst datas = yield Promise.all(files.map(f => this.$.read(f)))","","\t// update known globs","\tthis._.globs = globs","\t// update known files, as (mod\"d) `pathObject`s","\tthis._.files = files.map((el, idx) => {","\t\tconst obj = parse(el)","\t\treturn {","\t\t\tdir: normalize(obj.dir),","\t\t\tdata: datas[idx],","\t\t\tbase: obj.base","\t\t}","\t})","})","","Task.prototype.target = co(function * (dirs, opts) {","\tdirs = $.flatten($.toArray(dirs))","\topts = opts || {}","","\tconst files = this._.files","\t// using `watcher`? original globs passed as `prevs`","\t// non-wildcard glob segments that should be trimmed!","\tconst globs = (this._.prevs && this._.prevs.length > 0) ? this._.prevs : this._.globs","","\tconst trims = globs.map(g => {","\t\tlet seg = g.split(RGX)","\t\tconst idx = seg.findIndex(str => str.includes(\"*\"))","","\t\tif (idx === -1) {","\t\t\tseg.pop()","\t\t} else {","\t\t\tseg = seg.slice(0, idx)","\t\t}","","\t\treturn normalize(seg.join(sep))","\t}).sort((a, b) => b.length - a.length)","","\tconst tLength = trims.length","","\treturn yield Promise.all(","\t\t$.flatten(","\t\t\tfiles.map(obj => dirs.map(d => {","\t\t\t\tlet i = 0","\t\t\t\t// clone `pathObject` per target dir","\t\t\t\tconst o = { dir: obj.dir, base: obj.base }","\t\t\t\t// replace `source` segments with `target` dir","\t\t\t\tfor (; i < tLength; i++) {","\t\t\t\t\to.dir = o.dir.replace(trims[i], d)","\t\t\t\t}","\t\t\t\t// create final filepath & write to it!","\t\t\t\treturn this.$.write(format(o), obj.data, opts)","\t\t\t}))","\t\t)","\t)","})","","module.exports = Task",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"17":1,"19":0,"20":0,"21":0,"23":0,"24":0,"25":0,"26":0,"28":0,"29":0,"32":0,"35":1,"37":0,"38":0,"41":1,"42":0,"45":1,"46":0,"47":0,"49":0,"50":0,"54":0,"57":0,"59":0,"60":0,"61":0,"69":1,"70":0,"71":0,"73":0,"76":0,"78":0,"79":0,"80":0,"82":0,"83":0,"85":0,"88":0,"89":0,"91":0,"93":0,"95":0,"96":0,"98":0,"100":0,"101":0,"104":0,"110":1}},"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/boot.js":{"path":"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/boot.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"deferAll","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":23}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":11},"end":{"line":8,"column":23}}},"3":{"name":"wrapAll","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":22}}},"4":{"name":"wrap","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":18}}},"5":{"name":"(anonymous_5)","line":25,"loc":{"start":{"line":25,"column":9},"end":{"line":25,"column":21}}},"6":{"name":"liquidate","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"2":{"start":{"line":5,"column":0},"end":{"line":13,"column":1}},"3":{"start":{"line":6,"column":2},"end":{"line":6,"column":14}},"4":{"start":{"line":7,"column":2},"end":{"line":11,"column":3}},"5":{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},"6":{"start":{"line":9,"column":6},"end":{"line":9,"column":58}},"7":{"start":{"line":9,"column":29},"end":{"line":9,"column":57}},"8":{"start":{"line":12,"column":2},"end":{"line":12,"column":10}},"9":{"start":{"line":15,"column":0},"end":{"line":22,"column":1}},"10":{"start":{"line":16,"column":2},"end":{"line":16,"column":14}},"11":{"start":{"line":17,"column":2},"end":{"line":20,"column":3}},"12":{"start":{"line":18,"column":4},"end":{"line":18,"column":32}},"13":{"start":{"line":18,"column":24},"end":{"line":18,"column":32}},"14":{"start":{"line":19,"column":4},"end":{"line":19,"column":33}},"15":{"start":{"line":21,"column":2},"end":{"line":21,"column":10}},"16":{"start":{"line":24,"column":0},"end":{"line":28,"column":1}},"17":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"18":{"start":{"line":26,"column":4},"end":{"line":26,"column":36}},"19":{"start":{"line":30,"column":0},"end":{"line":35,"column":1}},"20":{"start":{"line":31,"column":2},"end":{"line":31,"column":31}},"21":{"start":{"line":33,"column":2},"end":{"line":33,"column":54}},"22":{"start":{"line":34,"column":2},"end":{"line":34,"column":17}},"23":{"start":{"line":37,"column":0},"end":{"line":37,"column":26}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":18,"column":4}},{"start":{"line":18,"column":4},"end":{"line":18,"column":4}}]}},"code":["\"use strict\"","","const Promise = require('bluebird');","","function deferAll(obj) {","  const o = {}","  for (const k in obj) {","    o[k] = function () {","      return this.then(() => obj[k].apply(obj, arguments))","    }","  }","  return o","}","","function wrapAll(obj) {","  const o = {}","  for (const k in obj) {","    if (!(obj[k].call)) continue // only functions","    o[k] = wrap(obj[k]).bind(obj)","  }","  return o","}","","function wrap(fn) {","  return function () {","    return fn.apply(this, arguments)","  }","}","","function liquidate(obj) {","  const promised = wrapAll(obj)","  // merge with Promise API","  Object.assign(Promise.prototype, deferAll(promised))","  return promised","}","","module.exports = liquidate",""],"l":{"3":1,"5":1,"6":0,"7":0,"8":0,"9":0,"12":0,"15":1,"16":0,"17":0,"18":0,"19":0,"21":0,"24":1,"25":0,"26":0,"30":1,"31":0,"33":0,"34":0,"37":1}},"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/fmt.js":{"path":"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/fmt.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":5,"column":0},"end":{"line":13,"column":1}}},"branchMap":{},"code":["\"use strict\"","","const c = require(\"clor\")","","module.exports = {","\tcomplete: c.blue.bold,","\ttitle: c.bold.yellow,","\terror: c.bold.red,","\tpath: c.underline.cyan,","\twarn: c.bold.magenta,","\ttext: c.bold.white,","\ttime: c.green","}",""],"l":{"3":1,"5":1}},"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/plugins.js":{"path":"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/plugins.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"req","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":25}}},"2":{"name":"getDependencies","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":30}}},"3":{"name":"(anonymous_3)","line":60,"loc":{"start":{"line":60,"column":22},"end":{"line":60,"column":39}}},"4":{"name":"(anonymous_4)","line":84,"loc":{"start":{"line":84,"column":16},"end":{"line":84,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":41}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":39}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":40}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":28}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":33}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":25}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":25}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":19}},"10":{"start":{"line":19,"column":0},"end":{"line":31,"column":1}},"11":{"start":{"line":20,"column":1},"end":{"line":30,"column":2}},"12":{"start":{"line":21,"column":2},"end":{"line":27,"column":3}},"13":{"start":{"line":22,"column":3},"end":{"line":22,"column":31}},"14":{"start":{"line":24,"column":3},"end":{"line":24,"column":26}},"15":{"start":{"line":26,"column":3},"end":{"line":26,"column":24}},"16":{"start":{"line":29,"column":2},"end":{"line":29,"column":20}},"17":{"start":{"line":38,"column":0},"end":{"line":53,"column":1}},"18":{"start":{"line":39,"column":1},"end":{"line":41,"column":2}},"19":{"start":{"line":40,"column":2},"end":{"line":40,"column":11}},"20":{"start":{"line":43,"column":1},"end":{"line":46,"column":2}},"21":{"start":{"line":44,"column":2},"end":{"line":44,"column":61}},"22":{"start":{"line":45,"column":2},"end":{"line":45,"column":11}},"23":{"start":{"line":49,"column":1},"end":{"line":50,"column":62}},"24":{"start":{"line":50,"column":17},"end":{"line":50,"column":27}},"25":{"start":{"line":50,"column":40},"end":{"line":50,"column":61}},"26":{"start":{"line":52,"column":1},"end":{"line":52,"column":21}},"27":{"start":{"line":60,"column":0},"end":{"line":77,"column":2}},"28":{"start":{"line":62,"column":1},"end":{"line":62,"column":47}},"29":{"start":{"line":64,"column":1},"end":{"line":66,"column":2}},"30":{"start":{"line":65,"column":2},"end":{"line":65,"column":14}},"31":{"start":{"line":69,"column":1},"end":{"line":69,"column":44}},"32":{"start":{"line":71,"column":1},"end":{"line":74,"column":2}},"33":{"start":{"line":72,"column":2},"end":{"line":72,"column":34}},"34":{"start":{"line":73,"column":2},"end":{"line":73,"column":30}},"35":{"start":{"line":76,"column":1},"end":{"line":76,"column":20}},"36":{"start":{"line":84,"column":0},"end":{"line":116,"column":2}},"37":{"start":{"line":86,"column":1},"end":{"line":86,"column":47}},"38":{"start":{"line":88,"column":1},"end":{"line":91,"column":2}},"39":{"start":{"line":89,"column":2},"end":{"line":89,"column":37}},"40":{"start":{"line":90,"column":2},"end":{"line":90,"column":11}},"41":{"start":{"line":94,"column":1},"end":{"line":94,"column":68}},"42":{"start":{"line":94,"column":54},"end":{"line":94,"column":67}},"43":{"start":{"line":95,"column":1},"end":{"line":95,"column":53}},"44":{"start":{"line":96,"column":1},"end":{"line":96,"column":43}},"45":{"start":{"line":98,"column":1},"end":{"line":105,"column":2}},"46":{"start":{"line":99,"column":2},"end":{"line":99,"column":11}},"47":{"start":{"line":100,"column":2},"end":{"line":100,"column":27}},"48":{"start":{"line":101,"column":2},"end":{"line":101,"column":34}},"49":{"start":{"line":102,"column":2},"end":{"line":104,"column":3}},"50":{"start":{"line":103,"column":3},"end":{"line":103,"column":37}},"51":{"start":{"line":108,"column":1},"end":{"line":110,"column":2}},"52":{"start":{"line":109,"column":2},"end":{"line":109,"column":25}},"53":{"start":{"line":112,"column":1},"end":{"line":112,"column":56}},"54":{"start":{"line":115,"column":1},"end":{"line":115,"column":42}},"55":{"start":{"line":115,"column":24},"end":{"line":115,"column":41}},"56":{"start":{"line":118,"column":0},"end":{"line":122,"column":1}}},"branchMap":{"1":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},{"start":{"line":39,"column":1},"end":{"line":39,"column":1}}]},"2":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":1},"end":{"line":43,"column":1}},{"start":{"line":43,"column":1},"end":{"line":43,"column":1}}]},"3":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},{"start":{"line":64,"column":1},"end":{"line":64,"column":1}}]},"4":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":1},"end":{"line":71,"column":1}},{"start":{"line":71,"column":1},"end":{"line":71,"column":1}}]},"5":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":5},"end":{"line":71,"column":13}},{"start":{"line":71,"column":17},"end":{"line":71,"column":29}}]},"6":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":1},"end":{"line":88,"column":1}},{"start":{"line":88,"column":1},"end":{"line":88,"column":1}}]},"7":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":16},"end":{"line":95,"column":28}},{"start":{"line":95,"column":32},"end":{"line":95,"column":53}}]},"8":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":1},"end":{"line":98,"column":1}},{"start":{"line":98,"column":1},"end":{"line":98,"column":1}}]},"9":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":1},"end":{"line":108,"column":1}},{"start":{"line":108,"column":1},"end":{"line":108,"column":1}}]}},"code":["\"use strict\"","","const p = require(\"path\")","const isObject = require(\"./fn\").isObject","const flatten = require(\"./fn\").flatten","const co = require(\"bluebird\").coroutine","const $ = require(\"./utils\")","","const rgx = /^(@.*?\\/fly-|fly-)/i","const dirname = p.dirname","const resolve = p.resolve","const join = p.join","","/**"," * Attempt to dynamically `require()` a file or package"," * @param  {String} name \tThe dep-name or filepath to require."," * @param  {String} base \tPath to `node_modules` directory."," */","function req(name, base) {","\ttry {","\t\ttry {","\t\t\tname = require.resolve(name)","\t\t} catch (_) {","\t\t\tname = join(base, name)","\t\t} finally {","\t\t\treturn require(name);","\t\t}","\t} catch (e) {","\t\t$.alert(e.message)","\t}","}","","/**"," * Find a sibling `package.json` file & return its contents."," * @param  {Object} file  A `package.json` contents as JSON"," * @return {Array}        The names of all dependencies, flattened"," */","function getDependencies(pkg) {","\tif (!pkg) {","\t\treturn []","\t}","","\tif (!isObject(pkg)) {","\t\t$.error(\"Content from `package.json` must be an `Object`!\")","\t\treturn []","\t}","","\t// get all possible dependencies","\tconst deps = [\"dependencies\", \"devDependencies\", \"peerDependencies\"]","\t\t.filter(key => key in pkg).map(dep => Object.keys(pkg[dep]))","","\treturn flatten(deps)","}","","/**"," * Find & Read a `package.json` file, starting from `dir`."," * @param {String} dir"," * @yield {Object}      If found, returns as `{file, data}`"," */","const getPackage = co(function * (dir) {","\t// traverse upwards from `dir`","\tconst file = yield $.find(\"package.json\", dir)","","\tif (!file) {","\t\treturn false","\t}","","\t// check if there\"s a \"fly\" config entry","\tconst data = JSON.parse(yield $.read(file))","","\tif (data.fly && data.fly.pkg) {","\t\tdir = resolve(dir, data.fly.pkg)","\t\treturn yield getPackage(dir)","\t}","","\treturn {file, data}","})","","/**"," * Loads all fly-related plugins!"," * @param  {String} flyfile  The full `flyfile.js` path"," * @return {Array}           All loaded plugins."," */","const load = co(function * (flyfile) {","\t// find a `package.json`, starting with `flyfile` dir","\tconst pkg = yield getPackage(dirname(flyfile))","","\tif (!pkg) {","\t\t$.error(\"No `package.json` found!\")","\t\treturn []","\t}","","\t// get ALL deps filter down to fly-only","\tconst deps = getDependencies(pkg.data).filter(dep => rgx.test(dep))","\tconst locals = pkg.data.fly && pkg.data.fly.requires","\tconst hasNext = deps.indexOf(\"fly-esnext\")","","\tif (locals) {","\t\tlet i = 0","\t\tconst len = locals.length","\t\tconst pkgDir = dirname(pkg.file)","\t\tfor (; i < len; i++) {","\t\t\tdeps.push(join(pkgDir, locals[i]))","\t\t}","\t}","","\t// if \"fly-esnext\" remove from `deps`","\tif (hasNext !== -1) {","\t\tdeps.splice(hasNext, 1)","\t}","","\tconst modules = join(dirname(pkg.file), \"node_modules\")","","\t// format return","\treturn deps.map(str => req(str, modules))","})","","module.exports = {","\tload,","\tgetPackage,","\tgetDependencies","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"9":1,"10":1,"11":1,"12":1,"19":1,"20":0,"21":0,"22":0,"24":0,"26":0,"29":0,"38":1,"39":0,"40":0,"43":0,"44":0,"45":0,"49":0,"50":0,"52":0,"60":1,"62":0,"64":0,"65":0,"69":0,"71":0,"72":0,"73":0,"76":0,"84":1,"86":0,"88":0,"89":0,"90":0,"94":0,"95":0,"96":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"108":0,"109":0,"112":0,"115":0,"118":1}},"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/reporter.js":{"path":"/home/travis/build/npmtest/node-npmtest-fly/node_modules/fly/lib/reporter.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":17},"end":{"line":7,"column":29}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":36}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":45}},"4":{"start":{"line":7,"column":0},"end":{"line":82,"column":1}},"5":{"start":{"line":8,"column":1},"end":{"line":81,"column":4}},"6":{"start":{"line":10,"column":3},"end":{"line":10,"column":41}},"7":{"start":{"line":14,"column":3},"end":{"line":14,"column":30}},"8":{"start":{"line":15,"column":3},"end":{"line":15,"column":18}},"9":{"start":{"line":19,"column":3},"end":{"line":19,"column":44}},"10":{"start":{"line":23,"column":3},"end":{"line":23,"column":53}},"11":{"start":{"line":27,"column":3},"end":{"line":27,"column":70}},"12":{"start":{"line":28,"column":3},"end":{"line":28,"column":54}},"13":{"start":{"line":29,"column":3},"end":{"line":29,"column":63}},"14":{"start":{"line":30,"column":3},"end":{"line":30,"column":13}},"15":{"start":{"line":34,"column":3},"end":{"line":34,"column":51}},"16":{"start":{"line":38,"column":3},"end":{"line":38,"column":53}},"17":{"start":{"line":42,"column":3},"end":{"line":42,"column":89}},"18":{"start":{"line":46,"column":3},"end":{"line":46,"column":72}},"19":{"start":{"line":50,"column":3},"end":{"line":50,"column":23}},"20":{"start":{"line":51,"column":3},"end":{"line":51,"column":75}},"21":{"start":{"line":55,"column":3},"end":{"line":55,"column":28}},"22":{"start":{"line":56,"column":3},"end":{"line":56,"column":47}},"23":{"start":{"line":57,"column":3},"end":{"line":57,"column":18}},"24":{"start":{"line":61,"column":3},"end":{"line":61,"column":63}},"25":{"start":{"line":65,"column":3},"end":{"line":65,"column":38}},"26":{"start":{"line":69,"column":3},"end":{"line":69,"column":29}},"27":{"start":{"line":70,"column":3},"end":{"line":70,"column":59}},"28":{"start":{"line":74,"column":3},"end":{"line":74,"column":51}},"29":{"start":{"line":75,"column":3},"end":{"line":75,"column":18}},"30":{"start":{"line":79,"column":3},"end":{"line":79,"column":23}},"31":{"start":{"line":80,"column":3},"end":{"line":80,"column":37}}},"branchMap":{"1":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":3},"end":{"line":29,"column":7}},{"start":{"line":29,"column":12},"end":{"line":29,"column":62}}]}},"code":["\"use strict\"","","const fmt = require(\"./fmt\")","const $ = require(\"./utils/logging\")","const formatTime = require(\"./fn\").formatTime","","module.exports = function () {","\treturn this","\t\t.on(\"fly_run\", file => {","\t\t\t$.log(`Flying with ${fmt.path(file)}`)","\t\t})","","\t\t.on(\"flyfile_not_found\", () => {","\t\t\t$.log(\"Flyfile not found!\")","\t\t\tprocess.exit(1)","\t\t})","","\t\t.on(\"fly_watch\", () => {","\t\t\t$.log(`${fmt.warn(\"Watching files...\")}`)","\t\t})","","\t\t.on(\"fly_watch_event\", obj => {","\t\t\t$.log(`File ${obj.action}: ${fmt.warn(obj.file)}`)","\t\t})","","\t\t.on(\"globs_no_match\", (globs, opts) => {","\t\t\tlet str = `${fmt.warn(\"Warning:\")} Source did not match any files!`","\t\t\tstr += `\\n\\t  Patterns:   ${JSON.stringify(globs)}`","\t\t\topts && (str += `\\n\\t  Options:    ${JSON.stringify(opts)}`)","\t\t\t$.log(str)","\t\t})","","\t\t.on(\"plugin_load\", obj => {","\t\t\t$.log(`Loading plugin ${fmt.title(obj.plugin)}`)","\t\t})","","\t\t.on(\"plugin_load_error\", str => {","\t\t\t$.log(`Problem loading plugin: ${fmt.title(str)}`)","\t\t})","","\t\t.on(\"plugin_rename\", (old, nxt) => {","\t\t\t$.log(`${fmt.title(old)} was renamed to ${fmt.title(nxt)} because its name was taken`)","\t\t})","","\t\t.on(\"plugin_warning\", obj => {","\t\t\t$.log(`${fmt.warn(obj.plugin)} warned that ${fmt.warn(obj.warning)}`)","\t\t})","","\t\t.on(\"plugin_error\", obj => {","\t\t\tprocess.exitCode = 1","\t\t\t$.log(`${fmt.error(obj.plugin)} failed because ${fmt.error(obj.error)}`)","\t\t})","","\t\t.on(\"tasks_force_object\", () => {","\t\t\t$.error(\"Invalid Tasks!\")","\t\t\t$.log(\"Custom `tasks` must be an `object`.\")","\t\t\tprocess.exit(1)","\t\t})","","\t\t.on(\"task_error\", (name, msg) => {","\t\t\t$.log(`${fmt.error(name)} failed because ${fmt.error(msg)}`)","\t\t})","","\t\t.on(\"task_start\", str => {","\t\t\t$.log(`Starting ${fmt.title(str)}`)","\t\t})","","\t\t.on(\"task_complete\", (str, time) => {","\t\t\tconst t = formatTime(time)","\t\t\t$.log(`Finished ${fmt.complete(str)} in ${fmt.time(t)}`)","\t\t})","","\t\t.on(\"task_not_found\", str => {","\t\t\t$.log(`${fmt.error(str)} not found in Flyfile.`)","\t\t\tprocess.exit(1)","\t\t})","","\t\t.on(\"serial_error\", () => {","\t\t\tprocess.exitCode = 1","\t\t\t$.error(\"Task chain was aborted!\")","\t\t})","}",""],"l":{"3":1,"4":1,"5":1,"7":1,"8":0,"10":0,"14":0,"15":0,"19":0,"23":0,"27":0,"28":0,"29":0,"30":0,"34":0,"38":0,"42":0,"46":0,"50":0,"51":0,"55":0,"56":0,"57":0,"61":0,"65":0,"69":0,"70":0,"74":0,"75":0,"79":0,"80":0}}}